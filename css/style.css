/* 
    Light green: #7ed56f
    Medium Green: #55c57a
    Dark green: #28b485
*/

* {
    margin: 0;
    padding: 0;
    box-sizing: inherit;
}

*::after,
*::before {
    margin: 0;
    padding: 0;
    box-sizing:inherit;
}

html {
    font-size: 10px;
    /*
         1 rem is directly the root
        font size.

        rem is 10px
    */
}
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size:16px;
    line-height: 1.7;
    color: #777;
    padding:3rem;

    box-sizing: border-box;
}
.header {
    height:95vh;
    background-image: linear-gradient(to right bottom, rgba(126,213,111,0.8),rgba(40,180,131,0.8)), url(/img/hero.jpg);
    background-size: cover;
    background-position: center;
     /* top left x, y. || top right x, y, || bottom left x,y || bottom right x,y*/
    clip-path: polygon(0 0 ,100% 0, 100% 75vh, 0 100%);
    border-radius:0.9%;
    /* header, parent element is a place ,
    the origin of where to start */
    position: relative;
    /* topleft topright bottomleft bottomright */
}

.header__logo-box {
    position: absolute;
    /* from the top 40 */
    /* a place from where we start */
    top:4rem;
    /* from the left 40*/
    left:4rem;
}

.header__logo {
    height:3.5rem;
}

.header__text-box {
    position: absolute;
    top:50%;
    left:50%;
    transform:translate(-50%,-50%);
    /* 
        inline-block
        is looked as text.
     */
    text-align:center;
    /* background-color: red; */
}

.heading-primary {
    color:#fff;
    text-transform: uppercase;
    margin-bottom:6rem;
    backface-visibility: hidden;
    /* determines if the back part
    of an element when you transform is visible
    or hidden for the user or rotate 100element
    it would be logical to see 100%, 
    the back part, the borders?
     */
}

.heading-primary--main {
    display:block;
    font-size: 6rem;
    font-weight: 400;
    /* h1 has a higher by default */
    letter-spacing: 3.5rem;

    animation-name: moveInLeft;
    animation-duration: 2s;
    animation-timing-function: ease-out;

}
.heading-primary--sub {
    display:block;
    font-size:2rem;
    font-weight:400;
    letter-spacing: 1.7rem;
    /*  */
    animation: moveInRight 1s ease-out;
}
@keyframes moveInBottom {
    0% {
        opacity: 0;
        transform:translateY(30px)
    }
    100%{
        opacity: 1;
        transform:translate(0);
    }
}
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform:translateX(-10rem);
    }

    80% {   
        transform: translateX(1rem);
    }   

    100% {
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform:translateX(10rem);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}
.btn:link,
.btn:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding:1.5rem 4rem;
    /* padding with height  */
    display:inline-block;
    /* treated as text */
    /* pseudo special states of a selector
    check box is clicked,
    last child,
    styling on a special condition,
    when it is an anchor element
     */
     border-radius:100px;
     transition: all .2s;
     position: relative;

}
.btn:hover {
    transform: translateY(-3rem);
    box-shadow: 0 1rem 2rem rgba(0,0,0.2);
    /* offset in X direction
        Shadow one
        Blur: 
        color
    */
}
.btn:active {
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba(0,0,0.2);

}
.btn--white {
    background-color:#fff;
    color:#777;
}
.btn::after {
    content: '';
    display: inline-block;
    height:100%;
    width:100%;
    border-radius:10rem;
    position: absolute;
    top: 0;
    left: 0;
    z-index:-1;
    /*  positioning
        if there one on top of another. 
     */
}
.btn--white::after{
    background-color:#fff;
}
.btn:hover::after {
    transform: scaleX(1) scaleY(1.6);
    opacity: 0;

}
.btn--animated {
    animation: moveInBottom .5s ease-out .75s;
    /* backwards: it will not be applied before the
    animation startss
    when its playing, it plays during the duration
     */
    animation-fill-mode: backwards;
}